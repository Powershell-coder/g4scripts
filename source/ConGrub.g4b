!BAT

errorcheck off
debug off
insmod wenv > nul
insmod %0 > nul


:: Call the subroutine specified as first parameter of the script
if "%1"=="findDLL" goto :findDLL
if "%1"=="isWinDir" goto :isWinDir
if "%1"=="patchUnpatch" goto :patchUnpatch
if "%1"=="patchDLL" goto :patchDLL
if "%1"=="unPatchDLL" goto :unPatchDLL
if "%1"=="help" goto :help


set dll = /system32/msv1_0.dll
set osDrv = (md)0x2000+1
set patchDrv = (md)0x2300+1
set devDrv = (md)0x2500+1
set dirDrv = (md)0x5800+80
echo -e \x0 > %osDrv%		## Initialize mem drive


:: Find Windows installations

:: Attempt to auto-detect Windows installation
if not "%1"=="" goto :forceDetect
:: If debug is off, nothing is written to output
:: If debug is on, output is too verbose
:: So, set debug to normal and turn it off immediately after
debug normal
find --devices=h > %devDrv%
debug off
set /a skip = 0
:autoLoop
cat --locate=\x0a --number=1 --skip=%skip% %devDrv% || goto :displayMenu
set /a length = %?% - %skip%
cat --skip=%skip% --length=%length% %devDrv% | set dev =
set /a skip = %length% + %skip% + 1
call %0 findDLL %dev%
goto :autoLoop


:: Force detection of Windows installation
:forceDetect
wenv for /L %p in (0,1,%1) do for /L %q in (0,1,%2) do exec %0 findDLL %p %q		## Iterate over HD partitions


:displayMenu
if "%osFound%"==""  echo No Windows installation found!	&& pause && goto :EOF		## Display Windows installations found
echo -e \ntitle Back to Main Menu \nconfigfile /menu.lst \nboot >> %osDrv%
echo -e \x0 >> %osDrv%	## EOF marker for configfile
configfile %osDrv%
goto :EOF


:: =======================  SUBROUTINES  =======================


:: Searches for msv1_0.dll, %1 = findDLL, %2 = Disk#, %3 = Partition#
:findDLL
set dllRoot = %2
if not "%dllRoot:~0,1%"=="(" set dllRoot = (hd%2,%3)
wenv dir %dllRoot%/ > %dirDrv%
wenv for /f %i in ( %dirDrv% ) do exec %0 isWinDir %i
goto :EOF


:: Checks if the directory contains Windows installation, %1 = isWinDir, %2 = Directory
:isWinDir
set dllPath = %dllRoot%/%2%dll%
cat --length=0 %dllPath% || goto :EOF	## Don't proceed further for non-existent partitions
:: Get size of msv1_0.dll in bytes
set /a len = *0x8290
:: Start forming menu items
set grubMenu = \ntitle Windows
:: Check for Windows version based on size of msv1_0.dll
set osFound =
if "%len%"=="97040" set osFound = 2000
if "%len%"=="144384" set osFound = 2003
if "%len%"=="210432" set osFound = 2008
if "%len%"=="132608" set osFound = XP
if "%len%"=="213504" set osFound = Vista
if "%len%"=="257024" set osFound = 7
set grubMenu = %grubMenu% %osFound% at %dllRoot% \ncall %0 patchUnpatch %dllRoot% %2 \npause \nboot
echo -e %grubMenu% >> %osDrv%			## Write configfile to mem drive
goto :EOF


:: Patch or Unpatch?
:patchUnpatch
echo -e title Patch \ncall %0 patchDLL %2 %3 \npause \nboot > %patchDrv%
echo -e title UnPatch \ncall %0 unPatchDLL %2 %3 \npause \nboot >> %patchDrv%
echo -e title Back to OS detection \nconfigfile %osDrv% \npause \nboot >> %patchDrv%
echo -e \x0 >> %patchDrv%			## EOF marker for configfile
configfile %patchDrv%
goto :EOF


:: Patches DLL file, %1 = patchDLL, %2 = (hdX,Y), %3 = WinDir
:patchDLL
set dllPath = %2/%3%dll%
cat --locate=\x33\xC0\x90 %dllPath% > nul
if "%@retval%"=="1" goto :warnUser
cat --hex --locate=\x83\xF8\x10 --replace=\x33\xC0\x90 %dllPath% > nul
echo DLL patched
goto :EOF
:warnUser
echo This DLL version is not compatible or has been already patched
configfile %osDrv%
goto :EOF


:: Unpatches DLL file, %1 = patchDLL, %2 = (hdX,Y), %3 = WinDir
:unPatchDLL
set dllPath = %2/%3%dll%
cat --hex --locate=\x33\xC0\x90 --replace=\x83\xF8\x10 %dllPath% > nul
echo DLL unpatched
goto :EOF


:help
echo -e \nConGrub v1.0 - Coded by Sherlock, Idea by jaclaz
echo Released under the jaclaz's CAREWARE license
echo -e \nUsage: ConGrub.g4b <MaxDisk#> <MaxPartition#>\n
echo By default, ConGrub tries to autodetect Windows installations
echo If autodetection fails, provide MaxDisk# and MaxPartition# 
echo to forcedetect and guide the script manually 
echo ConGrub.g4b script and WENV binary need to be
echo present on the root of the boot media.